---
apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: github-listener
spec:
  triggers:
    - name: github-listener
      interceptors:
        - ref:
            name: "github"
          params:
            - name: "secretRef"
              value:
                secretName: github-secret
                secretKey: secretToken
            - name: "eventTypes"
              value: ["pull_request"]
        - name: "only when PRs are opened"
          ref:
            name: "cel"
          params:
            - name: "filter"
              value: "body.action in ['opened', 'synchronize', 'reopened']"
      bindings:
        - ref: github-pr-binding
      template:
        ref: github-template
  resources:
    kubernetesResource:
      spec:
        template:
          spec:
            serviceAccountName: tekton-triggers-example-sa
            containers:
              - resources:
                  requests:
                    memory: "64Mi"
                    cpu: "250m"
                  limits:
                    memory: "128Mi"
                    cpu: "500m"
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: github-pr-binding
spec:
  params:
    - name: gitrevision
      value: $(body.pull_request.head.sha)
    - name: gitrepositoryurl
      value: $(body.repository.clone_url)

---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: github-template
spec:
  params:
    - name: gitrevision
    - name: gitrepositoryurl
#  resourceTemplates:
#    - apiVersion: tekton.dev/v1beta1
#      kind: TaskRun
#      metadata:
#        generateName: github-run-
#      spec:
#        taskSpec:
#          steps:
#            - image: ubuntu
#              script: |
#                #! /bin/bash
#                echo "Revision is : $(tt.params.gitrevision). RepoURL is $(tt.params.gitrepositoryurl)"
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: simple-pipeline-run-
      spec:
        pipelineRef:
          name: clone-build-push
        podTemplate:
          securityContext:
            fsGroup: 65532
        workspaces:
          - name: shared-data
            volumeClaimTemplate:
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi
          - name: git-credentials
            secret:
              secretName: git-credentials
          - name: docker-credentials
            secret:
              secretName: docker-credentials
        params:
          - name: repo-url
            value: git@github.com:michaltrmac/kis-onpk.git
          - name: image-reference
            value: michaltrmac/onpk-python-app:$(tt.params.gitrevision)
          - name: dockerfile
            value: python-app/Dockerfile
          - name: context
            value: python-app
#        pipelineRef:
#          name: simple-pipeline
#        params:
#          - name: message
#            value: $(tt.params.message)
#          - name: contenttype
#            value: $(tt.params.contenttype)
#          - name: git-revision
#            value: $(tt.params.gitrevision)
#          - name: git-url
#            value: $(tt.params.gitrepositoryurl)
#        workspaces:
#          - name: git-source
#            emptyDir: {}